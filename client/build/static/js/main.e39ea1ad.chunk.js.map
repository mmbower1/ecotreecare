{"version":3,"sources":["actions/types.js","img/accredited.png","img/certified.png","img/tree-solid.svg","img/american-express.png","img/discover.png","img/mastercard.png","img/visa.png","img/greenSPINNER.gif","components/header/Header.js","components/footer/Footer.js","components/spinner/Spinner.js","reducers/index.js","reducers/reviewReducers.js","store.js","App.js","serviceWorker.js","index.js"],"names":["REVIEW_REQUEST","REVIEW_SUCCESS","REVIEW_FAIL","module","exports","Header","className","src","logo","alt","action","placeholder","type","americanExpress","id","discover","mastercard","visa","Footer","certified","style","height","accredited","width","Spinner","spinner","margin","display","rootReducer","combineReducers","reviewReducer","state","loading","reviewInfo","payload","error","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","persistStore","Homepage","lazy","AboutUs","Services","Gallery","Review","App","props","fallback","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e39ea1ad.chunk.js","sourcesContent":["\nexport const REVIEW_REQUEST = 'REVIEW_REQUEST';\nexport const REVIEW_SUCCESS = 'REVIEW_SUCCESS';\nexport const REVIEW_FAIL = 'REVIEW_FAIL';","module.exports = __webpack_public_path__ + \"static/media/accredited.8d99c648.png\";","module.exports = __webpack_public_path__ + \"static/media/certified.be8f9c6c.png\";","module.exports = __webpack_public_path__ + \"static/media/tree-solid.b0741762.svg\";","module.exports = __webpack_public_path__ + \"static/media/american-express.8093a607.png\";","module.exports = __webpack_public_path__ + \"static/media/discover.f2d1769d.png\";","module.exports = __webpack_public_path__ + \"static/media/mastercard.48f563b8.png\";","module.exports = __webpack_public_path__ + \"static/media/visa.829bf23a.png\";","module.exports = __webpack_public_path__ + \"static/media/greenSPINNER.f632a596.gif\";","import React from 'react';\nimport logo from '../../img/tree-solid.svg';\n//style\nimport './Header.scss';\nimport americanExpress from '../../img/american-express.png';\nimport discover from '../../img/discover.png';\nimport mastercard from '../../img/mastercard.png';\nimport visa from '../../img/visa.png';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <img src={logo} alt=\"ecotreecare-logo\" className=\"logo\"/>\n      <form action=\"#\" className=\"search\">\n        <input\n          className=\"search-input\"\n          placeholder=\"Search trees\"\n          type=\"text\"\n        />\n        <button className=\"search-button\">\n          <i className=\"fas fa-search\"></i>\n        </button>\n      </form>\n      <div className=\"credit-cards\">\n        <img src={americanExpress} alt=\"american-express.png\" id=\"american-express\" />\n        <img src={discover} alt=\"discover.png\" id=\"discover\" />\n        <img src={mastercard} alt=\"mastercard.png\" id=\"mastercard\" />\n        <img src={visa} alt=\"visa.png\" id=\"visa\" />\n      </div>\n      <div className=\"subscribe\">\n        <p>Questions? <br />Contact us today!<br /> (530) 206-7681 </p>\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React from 'react';\n// style\nimport './Footer.scss';\nimport accredited from '../../img/accredited.png';\nimport certified from '../../img/certified.png';\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <span className=\"footer-credentials\">\n        <img src={certified} alt=\"\" style={{height: '10rem'}} />\n        <img src={accredited} alt=\"\" style={{width: '15rem'}}  />\n      </span>\n      <span className=\"footer-writing\">American Arbor Tree Care Professionals<br /> 10500 Subaco Rd Knights Landing, CA 95645 <br />Phone: (530) 206-7681<br />\n        © Copyright 2020 · American Arbor Tree Care Professionals ·<br /> All Rights Reserved\n      </span>\n      \n      <div className=\"social-media\">\n        <span>Find us on: </span><br />\n        <i className=\"fab fa-yelp\">&nbsp;Yelp</i><br />\n        <i className=\"fab fa-facebook\">&nbsp;Facebook</i><br />\n        <i className=\"fab fa-pinterest\">&nbsp;Pinterest</i><br />\n        <i className=\"fab fa-google\">&nbsp;Maps</i>\n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React, { Fragment } from 'react';\nimport spinner from '../../img/greenSPINNER.gif';\n// import { SpinnerContainer, SpinnerOverlay } from './Spinner.styles.js';\n\n// const Spinner = WrappedComponent => {\n//   const WithSpinner = ({ loading, ...props }) => {\n//     return loading ? (\n//       <SpinnerOverlay>\n//         <SpinnerContainer />\n//       </SpinnerOverlay>\n//     ) : (\n//       <WrappedComponent {...props} />\n//     ) \n//   }\n//   return WithSpinner\n// }\n\nconst Spinner = () => {\n  return (\n    <Fragment>\n      <img\n        className=\"spinner\"\n        src={spinner}\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\n        alt='Loading...'\n      />\n    </Fragment>\n  )\n}\n\nexport default Spinner;","import { combineReducers } from 'redux';\n// redux persist for localStorage\n// import { persistReducer } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\n// reducers\nimport { reviewReducer } from './reviewReducers';\n// import profile from './profile';\n\n// const persistConfig = {\n//   key: 'root',\n//   storage,\n//   whitelist: ['cart']\n// }\n\nconst rootReducer = combineReducers({\n  reviewReducer\n  // profile\n});\n\n// export default persistReducer(persistConfig, rootReducer);\nexport default rootReducer;","import {\n  REVIEW_REQUEST,\n  REVIEW_SUCCESS,\n  REVIEW_FAIL\n} from '../actions/types';\n\nexport const reviewReducer = (state = {}, action) => {\n  switch (action.type) {\n    case REVIEW_REQUEST:\n      return { loading: true }\n    case REVIEW_SUCCESS:\n      return { loading: false, reviewInfo: action.payload }\n    case REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport { persistStore } from 'redux-persist';\n// import { createSagaMiddleware } from 'redux-saga';\n\n// const sagaMiddleware = createSagaMiddleware();\n\nconst initialState = {};\nconst middleware = [thunk]; // sagaMiddleware replaces thunk here if using sagas\n\nexport const store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport const persistor = persistStore(store);\n\n// export default { store };\n// export default { persistor };","import React, { Fragment, lazy, Suspense, useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n// components\nimport Header from './components/header/Header';\nimport Footer from './components/footer/Footer';\nimport Spinner from './components/spinner/Spinner';\n\n// containers\n// import Homepage from './containers/homepage/Homepage';\n// import AboutUs from './containers/about-us/AboutUs';\n// import Services from './containers/services/Services';\n// import Gallery from './containers/gallery/Gallery';\n// import Review from './containers/review/Review';\n\n// styles\nimport './App.scss';\nimport './scss/App.scss';\n// redux\nimport { store, \n  // persistor \n} from './store';\nimport { Provider } from 'react-redux';\n\n// react lazy - replaces the imported containers from above\nconst Homepage = lazy(() => import('./containers/homepage/Homepage'));\nconst AboutUs = lazy(() => import('./containers/about-us/AboutUs'));\nconst Services = lazy(() => import('./containers/services/Services'));\nconst Gallery = lazy(() => import('./containers/gallery/Gallery'));\nconst Review = lazy(() => import('./containers/review/Review'));\n\n\nfunction App(props) {\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Switch>\n            <Suspense fallback={<Spinner />}>\n              {/* <Route exact path='/auth' component={Auth} /> */}\n              <div className=\"App\">\n                <Header />\n                  <Route exact path='/' component={Homepage} />\n                  <Route exact path='/about-us' component={AboutUs} />\n                  <Route exact path='/services' component={Services} />\n                  <Route exact path='/gallery' render={(props) => (<Gallery {...props} />)} />\n                  <Route exact path='/review' component={Review} />\n                <Footer />\n              </div>\n            </Suspense>\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}